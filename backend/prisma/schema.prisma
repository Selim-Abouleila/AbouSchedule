datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role
  tasks    Task[]
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  priority    Priority
  status      Status    @default(PENDING)
  size        Size      @default(LARGE)
  dueAt       DateTime?
  createdAt   DateTime  @default(now())

  /// NEW – optional time limit to finish the task (minutes)
  timeCapMinutes Int?
  startedAt      DateTime?       

  /// NEW – optional recurrence rule
  recurrence     Recurrence   @default(NONE)
  /// If you need “every 2 weeks / every 3 months”, keep this too
  recurrenceEvery Int?        // 1 = every week/month/…

  /// Optionally: stop repeating after this date
  recurrenceEnd  DateTime?
  labelDone      Boolean?  @default(false) @map("label_done")
  isDone       Boolean          @default(false) @map("is_done")
  lastOccurrence DateTime?

  /// Existing relation to user
  user    User?   @relation(fields: [userId], references: [id])
  userId  Int?

  /// Existing 1‑to‑many with images
  images  Image[]
  documents  Document[]
}

model Image {
  id     Int  @id @default(autoincrement())
  taskId Int
  task   Task @relation(fields: [taskId], references: [id], onDelete: Cascade)

  url  String // use this when you store the file in S3 / R2
  mime String
  // --- If you prefer binary-in-DB, swap the two lines above for:
  // data   Bytes   @db.ByteA

  createdAt DateTime @default(now())

  @@index([taskId]) // speeds up SELECT … WHERE taskId = …
}


model Document {
  id        Int    @id @default(autoincrement())
  taskId    Int
  task      Task   @relation(fields: [taskId], references: [id], onDelete: Cascade)

  url       String         // or use Bytes if you prefer in‑DB storage
  mime      String         // e.g. "application/pdf"
  fileName  String?        // original file name (optional)

  createdAt DateTime @default(now())

  @@index([taskId])
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Priority {
  IMMEDIATE
  RECURRENT
  ONE
  TWO
  THREE
  NONE
}

enum Status {
  PENDING
  ACTIVE
  DONE
}

enum Size {
  SMALL
  LARGE
}

enum Recurrence {
  NONE       // one‑off (default)
  DAILY
  WEEKLY
  MONTHLY
  YEARLY
}