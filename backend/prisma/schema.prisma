datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id       Int    @id @default(autoincrement())
  email    String @unique
  password String
  role     Role
  tasks    Task[]
}

model Task {
  id        Int       @id @default(autoincrement())
  title     String
  priority  Priority
  status    Status    @default(PENDING)
  size      Size      @default(LARGE)
  dueAt     DateTime?
  user      User?     @relation(fields: [userId], references: [id])
  userId    Int?
  createdAt DateTime  @default(now())

  /// NEW — one Task ↔ many Images
  images Image[]
}

model Image {
  id     Int  @id @default(autoincrement())
  taskId Int
  task   Task @relation(fields: [taskId], references: [id], onDelete: Cascade)

  url  String // use this when you store the file in S3 / R2
  mime String
  // --- If you prefer binary-in-DB, swap the two lines above for:
  // data   Bytes   @db.ByteA

  createdAt DateTime @default(now())

  @@index([taskId]) // speeds up SELECT … WHERE taskId = …
}

enum Role {
  ADMIN
  EMPLOYEE
}

enum Priority {
  IMMEDIATE
  RECURRENT
  ONE
  TWO
  THREE
  NONE
}

enum Status {
  PENDING
  ACTIVE
  DONE
}

enum Size {
  SMALL
  LARGE
}